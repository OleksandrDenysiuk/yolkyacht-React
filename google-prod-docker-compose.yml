version: "3"

services:
  ##########################
  ### SETUP SERVER CONTAINER
  ##########################
  server:
    # Tell docker what file to build the server from
    build:
      context: ./server
      dockerfile: Dockerfile-Google-Prod
    # The ports to expose
    expose:
      - 5000
    # Environment variables
    environment:
      #- MONGO_URI=mongodb://captain-dev:yellow2019@ds051635.mlab.com:51635/yolkmarine
      - PORT=5000
      #- JWT_SECRET=secretsecret
      #- JWT_EXPIRY=30d
      #- DEBUG=worker:*
      #- MORGAN=combined
      #- NODE_ENV=Docker-Google-Prod
    # Port mapping
    ports:
      - 5000:5000
    # Volumes to mount
    volumes:
      - ./server/src:/app/server/src
    # Run command
    # Nodemon for hot reloading (-L flag required for polling in Docker)
    # command: nodemon -L src/server.js
    command: npm start
    #command: babel-node server.js
    # Connect to other containers
    links:
      - db
    # Restart action
    restart: always
  ##########################
  ### SETUP CLIENT CONTAINER
  ##########################
  client:
    build:
      context: ./client-web
      dockerfile: Dockerfile-Google-Prod
    environment:
      - REACT_APP_PORT=3000
      - CHOKIDAR_USEPOLLING=true
      - NODE_ENV=Docker-Google-Prod
      - PROXY_ENV=Docker-Google-Prod
    expose:
      - 3000
    ports:
      - 3000:3000
    volumes:
      - ./client-web/src:/app/client-web/src
      - ./client-web/public:/app/client-web/public
    links:
      - server
    command: npm run start
    restart: always

  ##########################
  ### SETUP DB CONTAINER
  ##########################
  db:
    image: mongo
    ports:
      - 27017:27017
    restart: always

